@page
@model BDAT1001.ContactManagement.Pages.DetailsModel

@{
    ViewData["Title"] = "Contact Details";
}
<div class="container mt-5">
    <h1 class="details-header">@ViewData["Title"]</h1>
    <div class="details-container">
        <h4>Contact</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Contact.Name)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Contact.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Contact.Address)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Contact.Address)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Contact.City)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Contact.City)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Contact.State)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Contact.State)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Contact.Zip)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Contact.Zip)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Contact.Email)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Contact.Email)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Contact.Status)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Contact.Status)
            </dd>
        </dl>
    </div>

    <div class="action-links">
        @if (Model.Contact.Status != ContactStatus.Approved)
        {
            @if ((await AuthorizationService.AuthorizeAsync(User, Model.Contact, ContactOperations.Approve)).Succeeded)
            {
                <form style="display:inline;" method="post">
                    <input type="hidden" name="id" value="@Model.Contact.ContactId" />
                    <input type="hidden" name="status" value="@ContactStatus.Approved" />
                    <button type="submit" class="btn btn-xs btn-success">Approve</button>
                </form>
            }
        }

        @if (Model.Contact.Status != ContactStatus.Rejected)
        {
            @if ((await AuthorizationService.AuthorizeAsync(User, Model.Contact, ContactOperations.Reject)).Succeeded)
            {
                <form style="display:inline;" method="post">
                    <input type="hidden" name="id" value="@Model.Contact.ContactId" />
                    <input type="hidden" name="status" value="@ContactStatus.Rejected" />
                    <button type="submit" class="btn btn-xs btn-danger">Reject</button>
                </form>
            }
        }

        @if ((await AuthorizationService.AuthorizeAsync(User, Model.Contact, ContactOperations.Update)).Succeeded)
        {
            <a asp-page="./Edit" asp-route-id="@Model.Contact.ContactId" class="btn btn-xs btn-primary">Edit</a>
        }
        <a asp-page="./Index" class="btn btn-xs btn-secondary">Back to List</a>
    </div>
</div>